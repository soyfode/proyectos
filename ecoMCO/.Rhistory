# LIBRERIAS
library(rdbnomics)
df <- rdb("IMF", "BOP", mask = "A.FR.BCA_BP6_EUR+IA_BP6_EUR")
View(df)
df <- df[!is.na(value)]
df <- df[order(period), head(.SD, 50), by = INDICATOR]
df
df <- rdb(ids = 'AMECO/ZUTN/EA19.1.0.0.0.ZUTN') %>%
filter(!is.na(value))
df <- rdb(ids = 'AMECO/ZUTN/EA19.1.0.0.0.ZUTN') %>%
filter(!is.na(value))
library(dplyr)
df <- rdb(ids = 'AMECO/ZUTN/EA19.1.0.0.0.ZUTN') %>%
filter(!is.na(value))
View(df)
install.packages("wooldridge")
# LIBRERIAS
library(wooldridge)
ls(package:wooldridge)
apple
hprice1
wage1
rental
gpa1
mroz
mroz
colnames(mroz)
install.packages("lmtest")
library(lmtest)
library(lmtest)
df = mroz
df = df[,c("wage","exper")]
df
#MCO
lm(df)
df = mroz
colnames(mroz)
df = df[,c("wage","exper","unem")]
?lm
#MCO
lm(wage~exper+unem,data = df)
#MCO
summary(lm(wage~exper+unem,data = df))
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
library(stats)
library(car)
install.packages("car")
library(car)
pairs(df)
ls(package:wooldridge)
df = mroz
# LIBRERIAS
library(wooldridge)
library(lmtest)
library(stats)
library(car)
ls(package:wooldridge)
df = mroz
pairs(df)
?pairs
pairs(df,bg = "light blue")
df = mroz
pairs(df)
ls(package:wooldridge)
df = mroz
pairs(df)
ls(package:wooldridge)
df = okun
pairs(df)
df = votel
pairs(df)
ls(package:wooldridge)
df = votel
df = nyse
pairs(df)
df = inven
pairs(df)
df = fair
pairs(df)
df = wine
pairs(df)
df = wine
pairs(df)
df = apple
pairs(df)
ls(package:wooldridge)
df = apple
pairs(df)
df = prison
pairs(df)
df = mlbl
df = traffic1
pairs(df)
df = corn
pairs(df)
#MCO
lm(cornhec~soyhec+cornpix+soypic,data=df)
#MCO
lm(cornhec~soyhec+cornpix+soypix,data=df)
summary(lm)
#MCO
lm=lm(cornhec~soyhec+cornpix+soypix,data=df)
summary(lm)
#Linealidad en los coeficientes
resettest(lm)
?resettest
#Homocedasticidad de los errores
bptest(lm)
#Normalidad de los errores
shapiro.test(lm)
#Normalidad de los errores
shapiro.test(df)
#Normalidad de los errores
shapiro.test(lm)
library(tseries)
#Normalidad de los errores
jarque.bera.test(lm)
#Normalidad de los errores
jarque.bera.test(df)
#Normalidad de los errores
#Independencia de los errores
vif(lm)
#Normalidad de los errores
#Independencia de los errores
dwtest(lm)
#MCO
lm=lm(cornhec~soyhec+cornpix+soypix,data=df)
summary(lm)
#Normalidad de los errores
jarque.bera.test(lm$residuals)
#Independencia de los errores
dwtest(lm)
#Ausencia de multicolinealidad
vif(lm)
#Linealidad en los coeficientes(h_0:NO hay evidencia de que los coeficientes de
#los modelo sean no lineales)
resettest(lm)
#Homocedasticidad de los errores (h_0: No hay evidencia de que la varianza de
#los errores no sea constante a través de las observaciones.)
bptest(lm) #
#Normalidad de los errores (h_0: Los errores del modelo de regresión siguen una
# distribución normal.)
jarque.bera.test(lm$residuals) #
#Normalidad de los errores (h_0: Los errores del modelo de regresión siguen una
# distribución normal.)
jarque.bera.test(lm$residuals) # Los erroes No sigue una distribución normal
#Normalidad de los errores (h_0: Los errores del modelo de regresión siguen una
# distribución normal.)
jarque.bera.test(lm$residuals) # Los errores no sigue una distribución normal
#Independencia de los errores (h_0: No hay evidencia de que los errores estén
#correlacionados entre sí.)
dwtest(lm)
#Ausencia de multicolinealidad (h_0: No hay evidencia de que exista una alta
#correlación entre las variables explicativas del modelo.)
vif(lm)
summary(df)
quantile(df,probs = c(0,25,0.5,0.75))
quantile(df,probs=c(0,25,0.5,0.75))
quantile(df$county,probs=c(0,25,0.5,0.75))
quantile(df)
quantile(df$county)
quantile(df$cornhec)
#MCO
lm=lm(log(cornhec)~soyhec+cornpix+soypix,data=df)
summary(lm)
#Normalidad de los errores (h_0: Los errores del modelo de regresión siguen una
# distribución normal.)
jarque.bera.test(lm$residuals) # Los errores no sigue una distribución normal
#MCO
lm=lm(log(cornhec)~soyhec+cornpix+soypix,data=df)
summary(lm)
#Normalidad de los errores (h_0: Los errores del modelo de regresión siguen una
# distribución normal.)
jarque.bera.test(lm$residuals) # Los errores no sigue una distribución normal
#MCO
lm=lm(cornhec~log(soyhec)+cornpix+soypix,data=df)
summary(lm)
#MCO
lm=lm(cornhec~soyhec+log(cornpix)+soypix,data=df)
summary(lm)
#Normalidad de los errores (h_0: Los errores del modelo de regresión siguen una
# distribución normal.)
jarque.bera.test(lm$residuals) # Los errores no sigue una distribución normal
#MCO
lm=lm(cornhec~soyhec+cornpix+soypix,data=df)
summary(lm)
#Normalidad de los errores (h_0: Los errores del modelo de regresión siguen una
# distribución normal.)
hist(lm$residuals)
lm$residuals
shapiro.test(lm$residuals)
hist(abs(lm$residuals))
hist(abs(lm$residuals),breaks = 10)
par(mar=c(5,4,4,2)+0.1)
hist(abs(lm$residuals),breaks = 10)
lm$residuals
par(mar=c(25,4,4,2)+0.1)
lm$residuals
hist(abs(lm$residuals),breaks = 10)
par(mar=c(5,4,2,2))
hist(abs(lm$residuals),breaks = 10)
par(mar=c(5,4,2,2))
hist(abs(lm$residuals),breaks = 10)
#MCO
rlm=lm(cornhec~soyhec+cornpix+soypix,data=df)
summary(lm)
#MCO
rlm=lm(cornhec~soyhec+cornpix+soypix,data=df)
lm=lm(cornhec~soyhec+cornpix+soypix,data=df)
summary(lm)
#MCO
rlm=lm(cornhec~soyhec+cornpix+soypix,data=df)
lm=lm(cornhec~soyhec+cornpix+soypix,data=df)
summary(lm)
summary(rlm)
summary(lm)
summary(rlm)
#MCO
rlm=rlm(cornhec~soyhec+cornpix+soypix,data=df)
library(MASS)
#MCO
rlm=rlm(cornhec~soyhec+cornpix+soypix,data=df)
lm=lm(cornhec~soyhec+cornpix+soypix,data=df)
summary(lm)
summary(rlm)
summary(rlm$coefficients[, "P>|z|"]
summary(rlm$coefficients[, "P>|z|"])
summary(rlm$)coefficients[, "P>|z|"]
summary(rlm)$coefficients[, "P>|z|"]
#MCO
rlm=rlm(cornhec~soyhec+cornpix+soypix,data=df)
rlm
summary(rlm)
summary(lm)
summary(rlm)
#Independencia de los errores (h_0: No hay evidencia de que los errores estén
#correlacionados entre sí.)
dwtest(lm)#No estan correlacionados
#Ausencia de multicolinealidad (variables correlacionadas) (Si el VIF de una
#variable es mayor que 5 o 10, generalmente se considera que hay multicolinealidad en el modelo.)
vif(lm)# No existe multicolinalidad
#Ausencia de correlación entre las variables independientes y el término de
#error:
bptest(lm)#Es constante
#Ausencia de correlación entre las variables independientes y el término de
#error: h_0: no existe correlacion.
bptest(lm)#Es constante
#Homocedasticidad de los errores (h_0: No hay evidencia de que la varianza de
#los errores no sean constante a través de las observaciones.)
white.test(lm)
lm=lm(cornhec~soyhec+cornpix+soypix,data=df)
#Homocedasticidad de los errores (h_0: No hay evidencia de que la varianza de
#los errores no sean constante a través de las observaciones.)
white.test(lm)
#Homocedasticidad de los errores (h_0: No hay evidencia de que la varianza de
#los errores no sean constante a través de las observaciones.)
plot(lm$fitted.values, lm$residuals,
xlab = "Valores ajustados", ylab = "Residuos",
main = "Gráfico de residuos versus valores ajustados")
#Homocedasticidad de los errores (h_0: No hay evidencia de que la varianza de
#los errores no sean constante a través de las observaciones.)
plot(lm$fitted.values, lm$residuals,
xlab = "Valores ajustados", ylab = "Residuos",
main = "Gráfico de residuos versus valores ajustados")
plot(lm)
#Homocedasticidad de los errores (h_0: No hay evidencia de que la varianza de
#los errores no sean constante a través de las observaciones.)
ggplot2::geom_abline(lm)
#Homocedasticidad de los errores (h_0: No hay evidencia de que la varianza de
#los errores no sean constante a través de las observaciones.)
ggplot2::geom_abline(lm)
mean(ml$residuals)
mean(lm$residuals)
lm=lm(cornhec~soyhec+cornpix+soypix,data=df)
summary(lm)
?lm
